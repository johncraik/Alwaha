// <auto-generated />
using System;
using AlwahaLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlwahaLibrary.Migrations
{
    [DbContext(typeof(AlwahaDbContext))]
    [Migration("20250926210958_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AlwahaLibrary.Models.BundleItem", b =>
                {
                    b.Property<string>("BundleId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("BundleId");

                    b.HasIndex("ItemId");

                    b.ToTable("BundleItems");
                });

            modelBuilder.Entity("AlwahaLibrary.Models.ItemTag", b =>
                {
                    b.Property<string>("TagId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Colour")
                        .HasColumnType("longtext");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TagId");

                    b.ToTable("ItemTags");
                });

            modelBuilder.Entity("AlwahaLibrary.Models.ItemToSet", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SetId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ItemId", "SetId");

                    b.HasIndex("SetId");

                    b.ToTable("ItemToSets");
                });

            modelBuilder.Entity("AlwahaLibrary.Models.ItemToTag", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TagId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ItemId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ItemToTags");
                });

            modelBuilder.Entity("AlwahaLibrary.Models.ItemType", b =>
                {
                    b.Property<string>("ItemTypeId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Colour")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("ItemTypeId");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("AlwahaLibrary.Models.MenuItem", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Colour")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSet")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemTypeId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MenuItemItemId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ItemId");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("MenuItemItemId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("AlwahaLibrary.Models.BundleItem", b =>
                {
                    b.HasOne("AlwahaLibrary.Models.MenuItem", "MenuItem")
                        .WithMany("BundleItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("AlwahaLibrary.Models.ItemToSet", b =>
                {
                    b.HasOne("AlwahaLibrary.Models.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlwahaLibrary.Models.MenuItem", "MenuSet")
                        .WithMany()
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("MenuSet");
                });

            modelBuilder.Entity("AlwahaLibrary.Models.ItemToTag", b =>
                {
                    b.HasOne("AlwahaLibrary.Models.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlwahaLibrary.Models.ItemTag", "ItemTag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemTag");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("AlwahaLibrary.Models.MenuItem", b =>
                {
                    b.HasOne("AlwahaLibrary.Models.ItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AlwahaLibrary.Models.MenuItem", null)
                        .WithMany("SetItems")
                        .HasForeignKey("MenuItemItemId");

                    b.Navigation("ItemType");
                });

            modelBuilder.Entity("AlwahaLibrary.Models.MenuItem", b =>
                {
                    b.Navigation("BundleItems");

                    b.Navigation("SetItems");
                });
#pragma warning restore 612, 618
        }
    }
}
