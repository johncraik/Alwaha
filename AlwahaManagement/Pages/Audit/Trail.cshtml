@page "{id}"
@using AlwahaLibrary.Models
@model AlwahaManagement.Pages.Audit.Trail

@{
    ViewData["Title"] = "Audit Trail";
}

<div class="mb-4">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1>@ViewData["Title"]</h1>
            <p class="text-muted mb-0">
                @if (Model.IsUser)
                {
                    <i class="fa-solid fa-user me-1"></i><strong>User:</strong> @Model.EntityName
                }
                else
                {
                    <i class="fa-solid fa-table me-1"></i><strong>@Model.TableName:</strong> @Model.EntityName
                }
            </p>
        </div>
        <button class="btn btn-secondary" onclick="history.back()">
            <i class="fa-solid fa-arrow-left"></i> Back
        </button>
    </div>
</div>

@if (Model.AuditEntries.Any())
{
    <div class="card shadow-sm">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Date & Time</th>
                            <th>Action</th>
                            @if (Model.IsUser)
                            {
                                <th>Table</th>
                                <th>Entity</th>
                            }
                            else
                            {
                                <th>User</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var entry in Model.AuditEntries)
                        {
                            var actionBadge = entry.AuditAction switch
                            {
                                AuditAction.CREATE => "bg-success",
                                AuditAction.EDIT => "bg-warning text-dark",
                                AuditAction.DELETE => "bg-danger",
                                AuditAction.RESTORE => "bg-info",
                                _ => "bg-secondary"
                            };

                            var actionIcon = entry.AuditAction switch
                            {
                                AuditAction.CREATE => "fa-plus",
                                AuditAction.EDIT => "fa-pencil",
                                AuditAction.DELETE => "fa-trash",
                                AuditAction.RESTORE => "fa-trash-restore",
                                _ => "fa-question"
                            };

                            <tr>
                                <td>
                                    <i class="fa-solid fa-clock me-1 text-muted"></i>
                                    @entry.Date.ToString("yyyy-MM-dd HH:mm:ss")
                                </td>
                                <td>
                                    <span class="badge @actionBadge">
                                        <i class="fa-solid @actionIcon me-1"></i>@entry.AuditAction
                                    </span>
                                </td>
                                @if (Model.IsUser)
                                {
                                    <td>@entry.TableName</td>
                                    <td>
                                        <span class="text-muted" id="entity-@entry.Id">Loading...</span>
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        <i class="fa-solid fa-user me-1 text-muted"></i>
                                        <span id="user-@entry.Id">@entry.UserId</span>
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Audit trail pagination" class="mt-3">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="/Audit/Trail/@Model.Id?isUser=@Model.IsUser&page=@(Model.CurrentPage - 1)">
                        <i class="fa-solid fa-chevron-left"></i> Previous
                    </a>
                </li>

                @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="/Audit/Trail/@Model.Id?isUser=@Model.IsUser&page=@i">@i</a>
                    </li>
                }

                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="/Audit/Trail/@Model.Id?isUser=@Model.IsUser&page=@(Model.CurrentPage + 1)">
                        Next <i class="fa-solid fa-chevron-right"></i>
                    </a>
                </li>
            </ul>
        </nav>

        <div class="text-center text-muted">
            <small>Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) - @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalEntries) of @Model.TotalEntries entries</small>
        </div>
    }
}
else
{
    <div class="alert alert-info">
        <i class="fa-solid fa-info-circle me-2"></i>No audit entries found.
    </div>
}

@if (Model.IsUser)
{
    <script>
        // Load entity names for user audit trail
        document.addEventListener('DOMContentLoaded', async () => {
            @foreach (var entry in Model.AuditEntries)
            {
                <text>
                fetch('/Audit/GetEntityName?tableName=@entry.TableName&entityId=@entry.EntityId')
                    .then(r => r.text())
                    .then(name => {
                        document.getElementById('entity-@entry.Id').innerText = name || 'Unknown';
                    });
                </text>
            }
        });
    </script>
}
else
{
    <script>
        // Load usernames for entity audit trail
        document.addEventListener('DOMContentLoaded', async () => {
            @foreach (var entry in Model.AuditEntries)
            {
                <text>
                fetch('/Audit/GetUserName?userId=@entry.UserId')
                    .then(r => r.text())
                    .then(name => {
                        document.getElementById('user-@entry.Id').innerText = name || 'Unknown';
                    });
                </text>
            }
        });
    </script>
}